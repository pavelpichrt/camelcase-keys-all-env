!function(e,t){if("function"==typeof define&&define.amd)define(["exports"],t);else if("undefined"!=typeof exports)t(exports);else{var o={exports:{}};t(o.exports),e.camelcaseKeys=o.exports}}(this,function(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(e){return"object"===(void 0===e?"undefined":t(e))&&null!==e};e.default=function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!t||!o(t))return t;var n={},f=void 0;if(Array.isArray(t))return t.map(function(t){return e(t,r)});for(var i in t){var u=t[i];r[i]?f=r[i]:(f=(f=i.replace(/([\-_]\w)/g,function(e){return e[1].toUpperCase()}))[0].toLowerCase()+f.slice(1),r[i]=f),o(u)&&(u=e(u,r)),n[f]=u}return n}});